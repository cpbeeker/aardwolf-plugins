<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Saturday, November 04, 2017, 3:53 AM -->
<!-- MuClient version 4.98 -->

<!-- Plugin "SpellsCombat" generated by Plugin Wizard -->

<muclient>
<plugin
   name="SpellsCombat"
   author="Gloominati"
   id="c0921f75cac854a075ee7dbd"
   language="Lua"
   purpose="create alias shortcuts for the most appropriate spell of a specific damage type"
   date_written="2017-11-04 03:51:04"
   requires="4.98"
   version="1.0"
   >
<description trim="y">
<![CDATA[
TODO
]]>
</description>

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Aliases  -->

<aliases>
  <alias
   match="#alias {*} {*}"
   enabled="y"
   group="special_convenience_aliases"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>require "addxml"  -- addxml extension

-- add the alias

addxml.alias {
  name = "command_line_alias_" .. string.gsub(Base64Encode("%1"), "=", ""), 
  match = "%1",
  send = "%2",
  sequence = 100,
  enabled = true,
  send_to = 10,
  group = "command_line_aliases"
             }

ColourNote ("white", "green", "Added alias to match on '%1', sending '%2'")
  </send>
  </alias>
  <alias
   match="#trigger {*} {*}"
   enabled="y"
   group="special_convenience_aliases"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>require "addxml"  -- addxml extension

-- add the trigger 

addxml.trigger {
  name = "command_line_trigger_" .. string.gsub(Base64Encode("%1"), "=", ""), 
  match = "%1", 
  send = "%2",
  sequence = 100,
  enabled = true,
  send_to = 10,
  group = "command_line_triggers"
               }

ColourNote ("white", "green", "Added trigger to match on '%1', sending '%2'")
  </send>
  </alias>


  <alias
   name="SetElement"
   match="^set(\w*) (\d*)$"
   enabled="y"
   regexp="y"
   script="setElement"
   omit_from_output="y"
   ignore_case="y"
   sequence="100"
  >
  </alias>
	
	<alias
	   name="castSpell"
	   match="^(acid|air|bads|bash|cold|disease|earth|electric|energy|fire|holy|light|magic|mental|negative|pierce|poison|slash|shadow|sonic|water)$"
	   enabled="y"
	   regexp="y"
	   script="castSpell"
	   omit_from_output="y"
	   ignore_case="y"
	   sequence="100"
	>
	 </alias>
	
</aliases>

<!--  Plugin help  -->

<aliases>
  <alias
   script="OnHelp"
   match="spellc help"
   enabled="y"
  >
  </alias>
	
  <alias
   script="spellcList"
   ignore_case="y"
   omit_from_command_history="y"
   match="spellc list"
   enabled="y"
  >
  </alias>
</aliases>
	
<script>
<![CDATA[

function castSpell(sName,sLine,wildcards)
	if GetVariable(wildcards[1] .. "Spell") then
		Send("cast " .. GetVariable(wildcards[1] .. "Spell"))	
	else
		Note("")
		Note("SpellsCombat v0.1")
		ColourNote("red", "grey", "No spell set for " .. wildcards[1])
		Note("use set<damagetype> <spellnumber> to set your spell. setFire 45")
	end --if
end --function

function OnHelp ()
  world.Note (world.GetPluginInfo (world.GetPluginID (), 3))
end

function setElement(sName,sLine,wildcards)
	local element = string.lower(wildcards[1])
	local spellID = tostring(wildcards[2])
	local note = function (element, spellID) ColourNote("yellow","black","Your spell of damage type " .. element .. " has been set to spell ID ".. spellID) end
	local setElement = function (element,spellID) SetVariable(element .. "Spell",spellID) note(element,spellID) end

	local el = {
		"acid",
		"air",
		"bads",
		"bash",
		"cold",
		"disease",
		"earth",
		"electric",
		"energy",
		"fire",
		"holy",
		"light",
		"magic",
		"mental",
		"negative",
		"pierce",
		"poison",
		"slash",
		"shadow",
		"sonic",
		"water"
	}
	
	if element ~= "" and element ~= nil and spellID ~= "" and spellID ~= nil then
		for _,e in ipairs(el) do
			if e == element then
				r = setElement(element,spellID)
			end --if
		end --for
	end --if
end	-- setElement


function OnHelp ()
  Note (GetPluginInfo (GetPluginID (), 3))
end -- OnHelp

function spellcList ()
	ColourNote("blue","black","SpellCombat:","red","black"," Fire = ","darkred","black",GetVariable("fireSpell"))
end -- spelldcList

]]>
</script> 

</muclient>
