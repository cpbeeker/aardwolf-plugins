<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Saturday, November 04, 2017, 6:47 PM -->
<!-- MuClient version 4.98 -->

<!-- Plugin "RePlug" generated by Plugin Wizard -->

<muclient>
<plugin
   name="RePlug"
   author="Gloominati"
   id="666b9ea2a3fab084a717a659"
   language="Lua"
   purpose="reload plugins"
   date_written="2017-11-04 18:46:12"
   requires="4.98"
   version="1.0"
   >
<description trim="y">
<![CDATA[
Reload a Plugin with:

replug <pluginName>
]]>
</description>

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<aliases>
  <alias
   name="RePlug"
   match="^replug (.+?)$"
   enabled="y"
   regexp="y"
   script="requestHandler"
   omit_from_output="y"
   ignore_case="y"
   sequence="100"
  >
	</alias>

<!--  Plugin help  -->

  <alias
   script="OnHelp"
   match="^replug\s*(?:\shelp)?$"
   omit_from_output="y"
   ignore_case="y"
   regexp="y"
   enabled="y"
  >
  </alias>
</aliases>

<script>
<![CDATA[
function setContains(set, key)
    return set[key] ~= nil
end

function buildPTable()
	local list = {}
	for k, id in pairs (GetPluginList()) do
		list[GetPluginInfo(id, 1)] = id
	end -- for
return list
end --buildPTable

function getID(table, name)
	return table[name]
end --getID

function getPath(id)
	return id and GetPluginInfo(id, 6) or nil
end --getPath

function errorNote(error, func)
	Note("")
	ColourNote("yellow", "grey", "RePlug v0.1")
	ColourNote("white", "red", "RePlug :: " .. func .. " -- " .. error)
	Note("")
end -- errorNote

function note(msg)	
	Note("")
	ColourNote("yellow", "grey", "RePlug v0.1")
	ColourNote("yellow", "grey", "RePlug",
 					"cyan", "grey", " :: " .. msg)
	Note("")
end -- note

function OnHelp ()
  world.Note (world.GetPluginInfo (world.GetPluginID (), 3))
end

function requestHandler(sName, sLine, wildcards)
	if wildcards[1] == "" or wildcards[1] == nil then
		return
	end --if
	
	local basePath = string.gsub( GetPluginInfo(GetPluginID(), 6), "RePlug.xml", "")
	local paths = { basePath .. wildcards[1] .. ".xml", basePath .. "Bast\\" .. wildcards[1] .. ".xml" }

	local msg = ReloadPlugin(wildcards[1])

	if msg == 0 then
		note(wildcards[1] .. " :: returned with '" .. msg .. ":" .. error_desc[msg] .. "'")
	else
		errorNote("returned with '" .. msg .. ":" .. error_desc[msg] .. "'", "plugin: '" .. wildcards[1] .. "'")

		for v in pairs(paths) do 
			note("attempting to find and install at " .. paths[v])
			
			if LoadPlugin(paths[v]) == 0 then note(wildcards[1] .. " :: successfully installed '"  .. msg .. ":" .. error_desc[msg] .. "'") return end
		end
	end
end -- requestHandler
]]>
</script> 

</muclient>
